// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from sdk_bridge.djinni

#import "Muse/gen-objc/IXNMuseDataPacketType.h"
#import "Muse/gen-objc/IXNMuseModel.h"
#import "Muse/gen-objc/IXNReaderMusePlaybackSettings.h"
#import <Foundation/Foundation.h>
@class IXNMuseFileReader;
@class IXNReaderMuse;
@class IXNReaderMuseBuilder;
@protocol IXNEventLoop;

/**
 * Builds a
 * \if ANDROID_ONLY
 * ReaderMuse
 * \elseif IOS_ONLY
 * IXNReaderMuse
 * \endif
 * that plays back the packets in the given
 * \if ANDROID_ONLY
 * MuseFileReader
 * \elseif IOS_ONLY
 * IXNMuseFileReader
 * \endif
 *
 * It exposes a way to set the configuration with chainable method calls, e.g.:
 * \if WINDOWS_ONLY
 * \code
 *     auto reader_muse = ReaderMuseBuilder::get()
 *         ->with_packet_types(my_packet_types)
 *         ->with_model(my_model)
 *         ->build(my_reader);
 * \endcode
 * \elseif ANDROID_ONLY
 * \code
 *     ReaderMuse muse = ReaderMuseBuilder.get()
 *         .withPacketTypes(myPacketTypes)
 *         .build(myMuseFileReader);
 * \endcode
 * \elseif IOS_ONLY
 * \code
 *     IXNReaderMuse *muse = [[[ReaderMuseBuilder get]
 *         withPacketTypes: myPacketTypes]
 *         build: myMuseFileReader];
 * \endcode
 * \endif
 */

@interface IXNReaderMuseBuilder : NSObject

/**
 * Returns a reference to a
 * \if ANDROID_ONLY
 * ReaderMuseBuilder
 * \elseif IOS_ONLY
 * IXNReaderMuseBuilder
 * \endif
 * \return A reference to a
 * \if ANDROID_ONLY
 * ReaderMuseBuilder
 * \elseif IOS_ONLY
 * IXNReaderMuseBuilder
 * \endif
 */
+ (nullable IXNReaderMuseBuilder *)get;

/**
 * The set of packet types to pass through from the file.
 *
 * The default set contains the following all packet types in
 * \if ANDROID_ONLY
 * MuseDataPacketType.
 * \elseif IOS_ONLY
 * IXNMuseDataPacketType.
 * \endif
 * <br>
 *
 * The eventual set used is computed by the
 * last call to
 * \if ANDROID_ONLY
 * withPacketTypes()
 * \elseif IOS_ONLY
 * IXNReaderMuseBuilder::withPacketTypes:
 * \endif
 * minus the last call to
 * \if ANDROID_ONLY
 * skipPacketTypes()
 * \elseif IOS_ONLY
 * IXNReaderMuseBuilder::skipPacketTypes:
 * \endif
 * \param types The set of packet types to read.
 * \return A reference to the same
 * \if ANDROID_ONLY
 * ReaderMuseBuilder
 * \elseif IOS_ONLY
 * IXNReaderMuseBuilder
 * \endif
 */
- (nullable IXNReaderMuseBuilder *)withPacketTypes:(nonnull NSSet *)types;

/**
 * The set of packet types to explicitly ignore in the file.
 *
 * The default is the empty set.
 * <br>
 *
 * The eventual set used is computed by the
 * last call to
 * \if ANDROID_ONLY
 * withPacketTypes()
 * \elseif IOS_ONLY
 * IXNReaderMuseBuilder::withPacketTypes:
 * \endif
 * minus the last call to
 * \if ANDROID_ONLY
 * skipPacketTypes()
 * \elseif IOS_ONLY
 * IXNReaderMuseBuilder::skipPacketTypes:
 * \endif
 * \param types The set of packet types to skip.
 * \return A reference to the same
 * \if ANDROID_ONLY
 * ReaderMuseBuilder
 * \elseif IOS_ONLY
 * IXNReaderMuseBuilder
 * \endif
 */
- (nullable IXNReaderMuseBuilder *)skipPacketTypes:(nonnull NSSet *)types;

/**
 * The model that this Muse should say it is.
 *
 * The default is
 * \if ANDROID_ONLY
 * \link com.choosemuse.libmuse.MuseModel.MU_01 MU_01\endlink
 * \elseif IOS_ONLY
 * \link ::IXNMuseModel::IXNMuseModelMu01 MU_01\endlink
 * \endif
 * \param model The model to use.
 * \return A reference to the same
 * \if ANDROID_ONLY
 * ReaderMuseBuilder
 * \elseif IOS_ONLY
 * IXNReaderMuseBuilder
 * \endif
 */
- (nullable IXNReaderMuseBuilder *)withModel:(IXNMuseModel)model;

/**
 * The playback settings to use with playing back the file.
 *
 * The default is
 * \if ANDROID_ONLY
 * \link ReaderMusePlaybackSettings::AS_FAST_AS_POSSIBLE_WITH_SAVED_TIMESTAMP AS_FAST_AS_POSSIBLE_WITH_SAVED_TIMESTAMP\endlink
 * \elseif IOS_ONLY
 * \link IXNReaderMusePlaybackSettings::IXNReaderMusePlaybackSettingsAsFastAsPossibleWithSavedTimestamp
 * IXNReaderMusePlaybackSettingsAsFastAsPossibleWithSavedTimestamp\endlink
 * \endif
 *
 * \param settings The playback settings to use.
 *
 * \return A reference to the same
 * \if ANDROID_ONLY
 * ReaderMuseBuilder
 * \elseif IOS_ONLY
 * IXNReaderMuseBuilder
 * \endif
 */
- (nullable IXNReaderMuseBuilder *)withPlaybackSettings:(IXNReaderMusePlaybackSettings)settings;

/**
 * The
 * \if ANDROID_ONLY
 * EventLoop
 * \elseif IOS_ONLY
 * IXNEventLoop
 * \endif
 * to use to handle simulated playback.
 *
 * The default is a null pointer (no event loop).
 *
 * \param loop The
 * \if ANDROID_ONLY
 * EventLoop
 * \elseif IOS_ONLY
 * IXNEventLoop
 * \endif
 * to use.
 *
 * \return A reference to the same
 * \if ANDROID_ONLY
 * ReaderMuseBuilder
 * \elseif IOS_ONLY
 * IXNReaderMuseBuilder
 * \endif
 */
- (nullable IXNReaderMuseBuilder *)withEventLoop:(nullable id<IXNEventLoop>)loop;

/**
 * Construct a
 * \if ANDROID_ONLY
 * ReaderMuse
 * \elseif IOS_ONLY
 * IXNReaderMuse
 * \endif
 * \param reader The
 * \if ANDROID_ONLY
 * MuseFileReader
 * \elseif IOS_ONLY
 * IXNMuseFileReader
 * \endif
 * to use to read the file.
 * \return A
 * \if ANDROID_ONLY
 * ReaderMuse
 * \elseif IOS_ONLY
 * IXNReaderMuse
 * \endif
 * configured with the parameters that were set.
 */
- (nullable IXNReaderMuse *)build:(nullable IXNMuseFileReader *)reader;

/**
 * Construct a
 * \if ANDROID_ONLY
 * ReaderMuse
 * \elseif IOS_ONLY
 * IXNReaderMuse
 * \endif
 * \param reader The
 * \if ANDROID_ONLY
 * MuseFileReader
 * \elseif IOS_ONLY
 * IXNMuseFileReader
 * \endif
 * to use to read the file.
 * \param asyncLoop The
 * \if ANDROID_ONLY
 * EventLoop
 * \elseif IOS_ONLY
 * IXNEventLoop
 * \endif
 * to use for the call to
 * \if ANDROID_ONLY
 * Muse::runAsynchronously()
 * \elseif IOS_ONLY
 * ::IXNMuse::runAsynchronously:
 * \endif
 * \return A ReaderMuse configured with the parameters that were set.
 *
 * deprecated Set the
 * \if ANDROID_ONLY
 * EventLoop with withEventLoop()
 * \elseif IOS_ONLY
 * IXNEventLoop with IXNReaderMuseBuilder::withEventLoop:
 * \endif
 * and then call
 * \if ANDROID_ONLY
 * build()
 * \elseif IOS_ONLY
 * IXNReaderMuseBuilder::build:
 * \endif
 * instead.
 */
- (nullable IXNReaderMuse *)buildWithAsync:(nullable IXNMuseFileReader *)reader
                                 asyncLoop:(nullable id<IXNEventLoop>)asyncLoop;

@end
